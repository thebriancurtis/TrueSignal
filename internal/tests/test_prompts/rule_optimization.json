{
  "description": "Auto-generated expert test suite for rule_optimization.json",
  "tests": [
    {
      "name": "Valid input (from example)",
      "input": {
        "text": "Every API should require some kind of login before anything happens."
      },
      "expected_keys": [
        "optimized_text",
        "reasoning"
      ],
      "golden_hash": "cdab7ba078eeb76d059f60d7d2b5e78d451300097338aff8e88232a95d239218",
      "assert": [
        "'optimized_text' in output",
        "'reasoning' in output"
      ],
      "type": "regression",
      "goal": "Validate historical or complex logic path is preserved."
    },
    {
      "name": "Minimal valid input",
      "input": {
        "text": "x"
      },
      "expected_keys": [
        "optimized_text",
        "reasoning"
      ],
      "golden_hash": "cdab7ba078eeb76d059f60d7d2b5e78d451300097338aff8e88232a95d239218",
      "assert": [
        "'optimized_text' in output",
        "'reasoning' in output"
      ],
      "type": "regression",
      "goal": "Validate historical or complex logic path is preserved."
    },
    {
      "name": "Missing required field",
      "input": {},
      "expected_error": "Missing required field",
      "golden_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a",
      "assert": [],
      "type": "negative",
      "goal": "Ensure error is raised when required fields are missing or input is invalid."
    },
    {
      "name": "Wrong type input",
      "input": {
        "text": 123
      },
      "expected_error": "Invalid type",
      "golden_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a",
      "assert": [],
      "type": "negative",
      "goal": "Ensure error is raised when required fields are missing or input is invalid."
    },
    {
      "name": "Improve vague rule",
      "input": {
        "text": "Try to make systems kind of secure, ideally."
      },
      "expected_keys": [
        "optimized_text",
        "reasoning"
      ],
      "golden_hash": "cdab7ba078eeb76d059f60d7d2b5e78d451300097338aff8e88232a95d239218",
      "assert": [
        "'optimized_text' in output",
        "'reasoning' in output"
      ],
      "type": "regression",
      "goal": "Validate historical or complex logic path is preserved."
    },
    {
      "name": "Clarify verbose input",
      "input": {
        "text": "All users that access the system through any method must always log in using some form of credential."
      },
      "expected_keys": [
        "optimized_text",
        "reasoning"
      ],
      "golden_hash": "cdab7ba078eeb76d059f60d7d2b5e78d451300097338aff8e88232a95d239218",
      "assert": [
        "'optimized_text' in output",
        "'reasoning' in output"
      ],
      "type": "regression",
      "goal": "Validate historical or complex logic path is preserved."
    },
    {
      "name": "Legalese simplification",
      "input": {
        "text": "All employees are hereby required to submit access requests in accordance with policy."
      },
      "expected_keys": [
        "optimized_text",
        "reasoning"
      ],
      "golden_hash": "cdab7ba078eeb76d059f60d7d2b5e78d451300097338aff8e88232a95d239218",
      "assert": [
        "'optimized_text' in output",
        "'reasoning' in output"
      ],
      "type": "regression",
      "goal": "Validate historical or complex logic path is preserved."
    }
  ]
}